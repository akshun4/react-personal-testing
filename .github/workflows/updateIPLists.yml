name: Update Imperva WAF Bypass IPs

on:
  push:
    paths:
      - '.github/workflows/updateIPLists.yml'
  workflow_dispatch:   

jobs:
  checkIps:
    name: Check IPs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read JSON and extract array
        id: extract
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const inputFilePath = path.resolve(process.env.INPUT_FILE_PATH);
            const keyToExtract = process.env.INPUT_KEY;
            const data = JSON.parse(fs.readFileSync(inputFilePath, 'utf8'));

            // Handle nested keys
            const keys = keyToExtract.split('.');
            let extractedArray = data;
            for (let i = 0; i < keys.length; i++) {
              extractedArray = extractedArray[keys[i]];
            }
            
            console.log(`Extracted array: ${JSON.stringify(extractedArray)}`);
            core.setOutput('extractedArray', extractedArray);

        env:
          INPUT_FILE_PATH: staticwebapp.cofig.json
          INPUT_KEY: networking.allowedIpRanges

      - name: Fetch new Imperva IPs
        id: newAllowlistedIpList
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "new_array<<$EOF" >> "$GITHUB_ENV"
          curl -s --data "resp_format=json" https://my.imperva.com/api/integration/v1/ips | jq '.ipRanges' >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"

      - run: echo "${{ env.new_array }}"  

      - name: Compare arrays
        id: compare
        uses: actions/github-script@v6
        with:
          script: |
            echo "Old array: ${{ steps.extract.outputs.extractedArray }}"
            echo "New array: ${{ env.new_array }}"
            if [[ "${{ steps.readJson.outputs.array }}" == "${{ env.new_array }}" ]]; then
              echo "The arrays are equal."
            else
              echo "The arrays are different."
            fi
