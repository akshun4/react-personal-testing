name: Update Imperva WAF Bypass IPs

on:
  push:
    paths:
      - '.github/workflows/updateIPLists.yml'
      - 'staticwebapp.cofig.json'
  workflow_dispatch:   

jobs:
  checkIps:
    name: Check IPs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read JSON and extract array
        id: extract
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const inputFilePath = path.resolve(process.env.INPUT_FILE_PATH);
            const keyToExtract = process.env.INPUT_KEY;
            const jsonData = JSON.parse(fs.readFileSync(inputFilePath, 'utf8'));
            
            // Handle nested keys
            const keys = keyToExtract.split('.');
            let extractedArray = jsonData;
            for (let i = 0; i < keys.length; i++) {
              if (!extractedArray.hasOwnProperty(keys[i])) {
                console.log(`Key ${keys[i]} not found in the input file`);
                core.setOutput('extractedArray', []);
                return;
              }
              extractedArray = extractedArray[keys[i]];
            }
            
            console.log(`Extracted array: ${JSON.stringify(extractedArray)}`);
            core.setOutput('extractedArray', extractedArray);

        env:
          INPUT_FILE_PATH: staticwebapp.cofig.json
          INPUT_KEY: networking.allowedIpRanges

      - name: Fetch new Imperva IPs
        id: newAllowlistedIpList
        run: |
          new_array=$(curl -s --data "resp_format=json" https://my.imperva.com/api/integration/v1/ips | jq -r ".ipRanges")
          if [[ -z "$new_array" ]]; then
            echo "::error::Failed to fetch new array."
            exit 1
          else
            echo new_array=$new_array >> "$GITHUB_ENV"
          fi

      - name: Compare arrays
        id: compare
        uses: actions/github-script@v6
        with:
          script: |
            old_array=(${{ steps.extract.outputs.extractedArray }})
            new_array=(${{ env.new_array }})
            
            let result =
              old_array.length === new_array.length &&
              old_array.every(function (element) {
                return new_array.includes(element);
              });
            return(result)

      - name: Show result
        run: echo "${{steps.compare.outputs.result}}"

      - name: Check condition and exit
        if: steps.compare.outputs.result == 'true'
        run: |
          exit 1

      - name: Creates updated file
        id: createFile
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const inputFilePath = path.resolve(process.env.INPUT_FILE_PATH);
            const keyToExtract = process.env.INPUT_KEY;
            // const oldArray = (${{ steps.extract.outputs.extractedArray }})
            // const newArray = JSON.parse(${{ env.new_array }});            
            // const jsonData = JSON.parse(fs.readFileSync(inputFilePath, 'utf8'));
            // jsonData.oldArray = newArray;
            // fs.writeFileSync(inputFilePath, JSON.stringify(jsonData, null, 2));
        env:
          INPUT_FILE_PATH: staticwebapp.cofig.json
          INPUT_KEY: networking.allowedIpRanges

      # - name: Creates PR
      #   id: createPR
      #   run: |
      #     git checkout -b feat-update-imperva-ips
      #     gh pr create -B master -H feat-update-imperva-ips -t 'Update Imperva IPs in allowlist' --body 'Refer to updated Imperva IPs [list](https://docs.imperva.com/en-US/bundle/z-kb-articles-km/page/c85245b7.html)'