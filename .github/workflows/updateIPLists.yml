name: Update Imperva WAF Bypass IPs

on:
  push:
    paths:
      - '.github/workflows/updateIPLists.yml'
      - 'staticwebapp.cofig.json'
  workflow_dispatch:   

jobs:
  checkIps:
    name: Check IPs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read JSON and extract array
        id: extract
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const inputFilePath = path.resolve(process.env.INPUT_FILE_PATH);
            const keyToExtract = process.env.INPUT_KEY;
            const jsonData = JSON.parse(fs.readFileSync(inputFilePath, 'utf8'));
            
            // Handle nested keys
            const keys = keyToExtract.split('.');
            let extractedArray = jsonData;
            for (let i = 0; i < keys.length; i++) {
              if (!extractedArray.hasOwnProperty(keys[i])) {
                console.log(`Key ${keys[i]} not found in the input file`);
                core.setOutput('extractedArray', []);
                return;
              }
              extractedArray = extractedArray[keys[i]];
            }
            
            console.log(`Extracted array: ${JSON.stringify(extractedArray)}`);
            core.setOutput('extractedArray', extractedArray);

        env:
          INPUT_FILE_PATH: staticwebapp.cofig.json
          INPUT_KEY: networking.allowedIpRanges

      - name: Fetch new Imperva IPs
        id: newAllowlistedIpList
        run: |
          new_array=$(curl -s --data "resp_format=json" https://my.imperva.com/api/integration/v1/ips | jq -r ".ipRanges")
          if [[ -z "$new_array" ]]; then
            echo "::error::Failed to fetch new array."
            exit 1
          else
            echo new_array=$new_array >> "$GITHUB_ENV"
          fi

      - name: Compare arrays
        id: compare
        uses: actions/github-script@v6
        with:
          script: |
            old_array=(${{ steps.extract.outputs.extractedArray }})
            new_array=(${{ env.new_array }})
            
            let result =
              old_array.length === new_array.length &&
              old_array.every(function (element) {
                return new_array.includes(element);
              });
            return(result)

      - name: Show result
        run: echo "${{steps.compare.outputs.result}}"

      - name: Updates file
        if: steps.compare.outputs.result == 'false'
        id: updateFile
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const inputFilePath = path.resolve(process.env.INPUT_FILE_PATH);
            const keyToExtract = process.env.INPUT_KEY;
            const newArray = JSON.parse(`${{ env.new_array }}`);
            const jsonData = JSON.parse(fs.readFileSync(inputFilePath, 'utf8'));

            // Handle nested keys
            function setNestedValue(obj, keys, value) {
              if (keys.length === 1) {
                obj[keys[0]] = value;
              } else {
                const currentKey = keys[0];
                if (!obj.hasOwnProperty(currentKey)) {
                  obj[currentKey] = newArray;
                }
                setNestedValue(obj[currentKey], keys.slice(1), value);
              }
            }

            setNestedValue(jsonData, keyToExtract.split('.'), newArray);
            fs.writeFileSync(inputFilePath, JSON.stringify(jsonData, null, 2));
            console.log(JSON.stringify(jsonData, null, 2));
        env:
          INPUT_FILE_PATH: staticwebapp.cofig.json
          INPUT_KEY: networking.allowedIpRanges

      # - name: Create PR body
      #   id: pr-body
      #   run: |
      #     sed_command='s|## Description|## Description\nRefer to the \[**updated** list\](https\:\/\/docs.imperva.com\/en-US\/bundle\/z-kb-articles-km/page/c85245b7.html) of Imperva IPs only through which the entire network traffic must flow.|g'
      #     body=$(sed "$sed_command" ./.github/pr_template.md)
      #     echo "pr-body=$body" >> "$GITHUB_OUTPUT"

      - name: Create PR body
        id: pr-body
        run: |
          body='Refer to the [**updated**](https://google.com/weherever-we-may-roam/ewew.html) things.'
          echo "pr-body=$body" >> "$GITHUB_OUTPUT"

      - name: Create PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Updated staticwebapp.cofig.json
          add-paths: ./staticwebapp.cofig.json
          branch: feat-update-imperva-ips
          title: Update allowlisted Imperva IPs
          body: "${{ steps.pr-body.outputs.pr-body }}"
